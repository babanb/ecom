{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Krazy Meals",
    "description": "Krazy Meals for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "things",
      "description": "API for something"
    },
    {
      "name": "itemMaster",
      "description": "API for itemMaster"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/departments": {
      "get": {
        "tags": [
          "departments"
        ],
        "description": "Get all departments",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "departments"
        ],
        "description": "Create new department",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Department Parameters",
            "in": "body",
            "description": "Departments add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createDept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/deptresponse"
            }
          }
        }
      }
    },
    "/api/orders/getOrdersByUser/{Id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Get all orders by user",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "userId to get Orders",
            "required": true,
            "type": "number"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Pass JWT Token with Bearer ",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get all orders by user",
            "schema": {
              "$ref": "#/definitions/getOrderByUserResponse"
            }
          }
        }
      }
    },
    "/api/departments/{Id}": {
      "delete": {
        "tags": [
          "departments"
        ],
        "description": "Deletes a department",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "departments"
        ],
        "description": "Get department by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },

    "/api/navigationMenu": {
      "get": {
        "tags": [
          "navigationMenu"
        ],
        "description": "Get all categories",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "navigationMenu"
        ],
        "description": "Create new categories",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "navigationMenu Parameters",
            "in": "body",
            "description": "navigationMenu add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createNavigationMenu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/navigationMenuResponse"
            }
          }
        }
      }
    }, 
    "/api/navigationMenu/{Id}": {
      "delete": {
        "tags": [
          "navigationMenu"
        ],
        "description": "Deletes a navigationMenu",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "navigationMenu"
        ],
        "description": "Get navigationMenu by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }, 


    "/api/homePageSliders": {
      "get": {
        "tags": [
          "homePageSlider"
        ],
        "description": "Get all home Page Slider Images",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "homePageSlider"
        ],
        "description": "Add new Slider Image",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "homePageSlider Parameters",
            "in": "body",
            "description": "homePageSlider add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createhomePageSlider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/homePageSliderResponse"
            }
          }
        }
      }
    }, 
    "/api/productReviews": {
      "get": {
        "tags": [
          "productReviews"
        ],
        "description": "Get all productReviews",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "productReviews"
        ],
        "description": "Create new productReviews",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productReviews Parameters",
            "in": "body",
            "description": "productReviews add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createproductReviews"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/productReviewsResponse"
            }
          }
        }
      }
    }, 
    "/api/productReviews/{Id}": {
      "delete": {
        "tags": [
          "productReviews"
        ],
        "description": "Deletes a productReviews",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "productReviews"
        ],
        "description": "Get productReviews by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }, 

    "/api/categories": {
      "get": {
        "tags": [
          "category"
        ],
        "description": "Get all categories",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "category"
        ],
        "description": "Create new categories",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Category Parameters",
            "in": "body",
            "description": "Category add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createCategories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/categoriesResponse"
            }
          }
        }
      }
    },
    "/api/categories/getcategoriesByDepartmetId/{Id}": { 
      "get": {
        "tags": [
          "category"
        ],
        "description": "Get categories by department ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/products/searchProductsByCategory/{CATEGORY}": { 
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get products by category",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CATEGORY",
            "in": "path",
            "description": "Category name to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/products/searchProductsByDepartment/{DEPT}": { 
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get products by department",
        "operationId": "find",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "DEPT",
            "in": "path",
            "description": "Department name to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/categories/{Id}": {
      "delete": {
        "tags": [
          "category"
        ],
        "description": "Deletes a category",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "description": "Get category by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }, 
    "/api/subCategories": {
      "get": {
        "tags": [
          "subCategories"
        ],
        "description": "Get all subCategories",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "subCategories"
        ],
        "description": "Create new subCategory",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Category Parameters",
            "in": "body",
            "description": "subCategory add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createSubCategories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/subCategoriesResponse"
            }
          }
        }
      }
    },

     "/api/todaysDeal": {
      "get": {
        "tags": [
          "todaysDeal"
        ],
        "description": "Get all todaysDeal",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "todaysDeal"
        ],
        "description": "Create new todaysDeal",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "todaysDeal Parameters",
            "in": "body",
            "description": "todaysDeal add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createtodaysDeal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/todaysDealResponse"
            }
          }
        }
      }
    }, 
    "/api/todaysDeal/{Id}": {
      "delete": {
        "tags": [
          "todaysDeal"
        ],
        "description": "Deletes a todaysDeal",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "todaysDeal"
        ],
        "description": "Get todaysDeal by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }, 
    "/api/users": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Create new User",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User Parameters",
            "in": "body",
            "description": "User add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/Userresponse"
            }
          }
        }
      }
    },

    "/api/autocompleteSearchs/autoComplete/{searchTerm}": {
      "get": {
        "tags": [
          "autoComplete"
        ],
        "description": "Get autoComplete data by string",
        "operationId": "search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "string to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/autoCompleteResponse"
            }
          }
        }
      }
    },


    "/api/users/{id}/password": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Chnage user password",
        "operationId": "changePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [ 
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Pass JWT Token with Bearer ",
            "required": true
          },
          {
            "name": "User password Parameters",
            "in": "body",
            "description": "Change password with old password with Authorization Bearer {tocken}",
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeUserPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "change password response",
            "schema": {
              "$ref": "#/definitions/Userresponse"
            }
          }
        }
      }
    },



    "/api/users/forgotpassword": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Forgot user password",
        "operationId": "ForgotPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [ 
          {
            "name": "User Email",
            "in": "body",
            "description": "Get Temp Password",
            "required": true,
            "type": "number",
            "schema": {
              "$ref": "#/definitions/forgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "change password response",
            "schema": {
              "$ref": "#/definitions/forgotPasswordresponse"
            }
          }
        }
      }
    },



    "/api/shoppingCart/updateCart/{id}": {
      "post": {
        "tags": [
          "shoppingCart"
        ],
        "description": "Update Carts Item quantity or UserId if user logged in",
        "operationId": "UpdateCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "userId to get Orders",
            "required": true,
            "type": "number"
          },
          {
            "name": "shoppingCart Parameters",
            "in": "body",
            "description": "Update Cart to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Cart response",
            "schema": {
              "$ref": "#/definitions/UpdateCartresponse"
            }
          }
        }
      }
    },
    "/api/shoppingCart/updateCart": {
      "post": {
        "tags": [
          "shoppingCart"
        ],
        "description": "Update Carts Item quantity or UserId if user logged in",
        "operationId": "UpdateCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shoppingCart Parameters",
            "in": "body",
            "description": "Update Cart to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserToCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Cart response",
            "schema": {
              "$ref": "#/definitions/UpdateUserToCartresponse"
            }
          }
        }
      }
    },


    "/api/shoppingCart/EmptyCart": {
      "post": {
        "tags": [
          "shoppingCart"
        ],
        "description": "Empty Cart",
        "operationId": "EmptyCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shoppingCart Parameters",
            "in": "body",
            "description": "delete all the cart items from database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmptyCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Cart response",
            "schema": {
              "$ref": "#/definitions/UpdateUserToCartresponse"
            }
          }
        }
      }
    },

    
    "/api/shoppingCart/getCartItems": {
      "post": {
        "tags": [
          "shoppingCart"
        ],
        "description": "get all items in shoppingCart",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Cart Parameters",
            "in": "body",
            "description": "get all items in shoppingCart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getCartItems"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "schema": {
              "$ref": "#/definitions/getCartItemsResponse"
            }
          }
        }
      }
    },
    "/api/wishLists/updateCart/{id}": {
      "post": {
        "tags": [
          "wishList"
        ],
        "description": "Update Carts Item quantity or UserId if user logged in",
        "operationId": "UpdateCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "userId to get Orders",
            "required": true,
            "type": "number"
          },
          {
            "name": "wishList Parameters",
            "in": "body",
            "description": "Update Cart to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Cart response",
            "schema": {
              "$ref": "#/definitions/UpdateCartresponse"
            }
          }
        }
      }
    },
    "/api/wishLists/updateCart": {
      "post": {
        "tags": [
          "wishList"
        ],
        "description": "Update Carts Item quantity or UserId if user logged in",
        "operationId": "UpdateCart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "wishList Parameters",
            "in": "body",
            "description": "Update Cart to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserToCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update Cart response",
            "schema": {
              "$ref": "#/definitions/UpdateUserToCartresponse"
            }
          }
        }
      }
    },
    "/api/wishLists/getCartItems": {
      "post": {
        "tags": [
          "wishList"
        ],
        "description": "get all items in wishList",
        "operationId": "Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Cart Parameters",
            "in": "body",
            "description": "get all items in wishList",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getCartItems"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "schema": {
              "$ref": "#/definitions/getCartItemsResponse"
            }
          }
        }
      }
    },
     "/api/wishLists": {
      "post": {
        "tags": [
          "wishList"
        ],
        "description": "Create new wishList",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "wishList Parameters",
            "in": "body",
            "description": "wishList add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createwishList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/cartresponse"
            }
          }
        }
      }
    },
    "/auth/local": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Login",
        "operationId": "Authenticate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User Parameters",
            "in": "body",
            "description": "User add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login response",
            "schema": {
              "$ref": "#/definitions/loginresponse"
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "User Info",
        "operationId": "Authenticate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Pass JWT Token with Bearer ",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user Info response",
            "schema": {
              "$ref": "#/definitions/userInfoResponse"
            }
          }
        }
      }
    },
    "/api/shoppingCart": {
      "post": {
        "tags": [
          "shoppingCart"
        ],
        "description": "Create new shoppingCart",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "shoppingCart Parameters",
            "in": "body",
            "description": "shoppingCart add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createshoppingCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/cartresponse"
            }
          }
        }
      }
    },
    "/api/products/searchProducts/{searchTerm}": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get department by ID",
        "operationId": "search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/searchresponse"
            }
          }
        }
      }
    },

    "/api/productsProperties": {
      "post": {
        "tags": [
          "uploadProductsProperties"
        ],
        "description": "add productsProperties",
        "operationId": "post",
        "type": "object",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "add uploadProductsProperties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createProductsPropertiesResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/productsPropertiesResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "uploadProductsProperties"
        ],
        "description": "what this API does",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create productsProperties response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/products/updateAutoComplete": {
       "post": {
        "tags": [
          "products"
        ],
        "description": "Create/ Update Auto Complete Table",
        "operationId": "Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updateAutoProductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/updateAutoProductResponse"
            }
          }
        }
      }
    },  

    "/api/products/uploadProducts": {
        "post":{
          "tags":["products"],
          "description":"Upload products",
          "operationId":"post",
          "type": "object",
          "consumes": [
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters":[
            {
                "name":"file",
                "in": "formData",
                "description": "add products",
                "required": true,
                "type": "file"

            }
            ],
          "responses": {
            "200": {
              "description": "Upload products response",
              "schema":{
                "$ref":"#/definitions/response1"
              }
            }
          }
        }
  },
  
    "/api/products": {
      "post": {
        "tags": [
          "products"
        ],
        "description": "add products",
        "operationId": "post",
        "type": "object",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "add products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/productResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "products"
        ],
        "description": "what this API does",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/products/{ID}": {
      "delete": {
        "tags": [
          "products"
        ],
        "description": "Deletes a something",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "products"
        ],
        "description": "Returns the status of something",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
     "/api/address": {
      "get": {
        "tags": [
          "address"
        ],
        "description": "Get all address",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "address"
        ],
        "description": "Create new address",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address Parameters",
            "in": "body",
            "description": "Address add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createaddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/createaddress"
            }
          }
        }
      }
    },
    "/api/address/getaddressByUserId/{Id}": { 
      "get": {
        "tags": [
          "address"
        ],
        "description": "Get address by department ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Pass JWT Token with Bearer ",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/homePageSectionItems": { 
      "get": {
        "tags": [
          "homePageSectionItems"
        ],
        "description": "Get home Page Section Items",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "homePageSectionItems"
        ],
        "description": "Add new home PageS ection Item",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "home Page Section Items Parameters",
            "in": "body",
            "description": "Items add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createHomePageSectionItems"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/createHomePageSectionItems"
            }
          }
        }
      }
    },

    "/api/homePageSections": { 
      "get": {
        "tags": [
          "homePageSections"
        ],
        "description": "Get home Page Sections",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "homePageSections"
        ],
        "description": "Create new home Page Section",
        "operationId": "Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "homePageSections Parameters",
            "in": "body",
            "description": "Sections add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createHomePageSections"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/createHomePageSections"
            }
          }
        }
      }
    },

    "/api/address/{Id}": {
      "delete": {
        "tags": [
          "address"
        ],
        "description": "Deletes a address",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": [
          "address"
        ],
        "description": "Get address by ID",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "productResponse": {
      "properties": {
        "active": {
          "type": "boolean",
          "example": true
        },
        "newOld": {
          "type": "string",
          "example": "New"
        },
        "description": {
          "type": "asdasdasd",
          "example": "New"
        },
        "externalProductId": {
          "type": "string",
          "example": "asd12456"
        },
        "model": {
          "type": "string",
          "example": "as321231"
        },
        "make": {
          "type": "string",
          "example": "xyz"
        },
        "productSiteLaunchDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "merchantReleaseDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "restockDate": {
          "type": "string",
          "example": "12-11-2016"
        },
        "quantity": {
          "type": "number",
          "example": 10
        },
        "saleFromDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "saleEndDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "maxShipQty": {
          "type": "number",
          "example": 2
        },
        "itemPackageQty": {
          "type": "number",
          "example": "1"
        },
        "numberOfItems": {
          "type": "number",
          "example": "1"
        },
        "isGiftwrapped": {
          "type": "boolean",
          "example": false
        },
        "isDiscontinuedByManufacturer": {
          "type": "boolean",
          "example": false
        },
        "isGiftMessaged": {
          "type": "boolean",
          "example": false
        },
        "shippingWeight": {
          "type": "number",
          "example": 100
        },
        "shippingWeightUnitOfMeasure": {
          "type": "string",
          "example": "gm"
        },
        "weightUnitOfMeasure": {
          "type": "string",
          "example": "gm"
        },
        "length": {
          "type": "number",
          "example": 100
        },
        "width": {
          "type": "number",
          "example": 100
        },
        "height": {
          "type": "number",
          "example": "50"
        },
        "point1": {
          "type": "string",
          "example": "boolet point 1"
        },
        "point2": {
          "type": "string",
          "example": "boolet point 2"
        },
        "point3": {
          "type": "string",
          "example": "boolet point 3"
        },
        "point4": {
          "type": "string",
          "example": "boolet point 4"
        },
        "point5": {
          "type": "string",
          "example": "boolet point 5"
        },
        "s3": {
          "type": "string",
          "example": "New"
        },
        "s4": {
          "type": "string",
          "example": "search Keywords 4"
        },
        "s5": {
          "type": "string",
          "example": "search Keywords 5"
        },
        "p3": {
          "type": "string",
          "example": "platinum search Keywords 3"
        },
        "p4": {
          "type": "string",
          "example": "platinum search Keywords 4"
        },
        "s6": {
          "type": "string",
          "example": "search Keywords 6"
        },
        "otherImageUrl": {
          "type": "string",
          "example": "abcd.jpg"
        },
        "otherImageUrl1": {
          "type": "string",
          "example": "abcd1.jpg"
        },
        "otherImageUrl2": {
          "type": "string",
          "example": "abcd2.jpg"
        },
        "otherImageUrl3": {
          "type": "string",
          "example": "abcd3.jpg"
        },
        "otherImageUrl4": {
          "type": "string",
          "example": "abcd4.jpg"
        },
        "otherImageUrl5": {
          "type": "string",
          "example": "abcd5.jpg"
        },
        "otherImageUrl6": {
          "type": "string",
          "example": "abcd6.jpg"
        },
        "otherImageUrl7": {
          "type": "string",
          "example": "abcd7.jpg"
        },
        "otherImageUrl8": {
          "type": "string",
          "example": "abcd8.jpg"
        },
        "color": {
          "type": "string",
          "example": "black"
        },
        "size": {
          "type": "string",
          "example": "xl"
        },
        "sizeMap": {
          "type": "string",
          "example": "xl"
        },
        "colorMap": {
          "type": "string",
          "example": "black"
        },
        "discount": {
          "type": "number",
          "example": 0
        },
        "finalDiscount": {
          "type": "number",
          "example": 0
        },
        "offerAmt": {
          "type": "number",
          "example": 0
        },
        "offerPrice": {
          "type": "number",
          "example": 0
        },
        "discountOnDiscount": {
          "type": "number",
          "example": 0
        },
        "brand": {
          "type": "string",
          "example": "abc"
        },
        "listPrice": {
          "type": "number",
          "example": 500
        },
        "mainImageUrl": {
          "type": "string",
          "example": "abc.jpg"
        },
        "name": {
          "type": "string",
          "example": "test"
        },
        "p1": {
          "type": "string",
          "example": "platinum search Keywords 1"
        },
        "s1": {
          "type": "string",
          "example": "search Keywords 1"
        },
        "s2": {
          "type": "string",
          "example": "search Keywords 2"
        },
        "p2": {
          "type": "string",
          "example": "platinum search Keywords 2"
        },
        "salePrice": {
          "type": "Number",
          "example": 300
        },
        "sku": {
          "type": "string",
          "example": "abc1234"
        },
        "dept": {
          "type": "string",
          "example": "Mexican Grilled Chicken"
        },
        "cat": {
          "type": "food",
          "example": "New"
        },
        "vendorID": {
          "type": "Number",
          "example": 1000
        },
        "instock": {
          "type": "boolean",
          "example": true
        },
        "subCat": {
          "type": "string",
          "example": "meals"
        }
      }
    },
    "createDept": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "non veg"
        },
        "description": {
          "type": "string",
          "example": "non veg"
        },
        "isActive": {
          "required": true,
          "type": "boolean"
        }
      }
    },
    "deptresponse": {
      "properties": {
        "name": {
          "required": true,
          "type": "String",
          "example": "non veg"
        },
        "description": {
          "required": true,
          "type": "String",
          "example": "non veg "
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    },
    "createCategories": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "non veg"
        },
        "department": {
          "type": "Number",
          "example": "1"
        },
        "isActive": {
          "required": true,
          "type": "boolean"
        }
      }
    },
    "categoriesResponse": {
      "properties": {
        "name": {
          "required": true,
          "type": "String",
          "example": "non veg"
        },
        "department": {
          "required": true,
          "type": "Number",
          "example": "0"
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    }, 


    "createSubCategories": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "non veg"
        },
        "category": {
          "type": "Number",
          "example": "1"
        },
        "isActive": {
          "required": true,
          "type": "boolean"
        }
      }
    },
    "subCategoriesResponse": {
      "properties": {
        "name": {
          "required": true,
          "type": "String",
          "example": "non veg"
        },
        "category": {
          "required": true,
          "type": "Number",
          "example": "1"
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    }, 

    "createproductReviews": {
      "properties": {

        "productID":  {
          "required": true,
          "type": "Number",
          "example": "1"
        },
      "comments": {  
          "type": "string",
          "example": "non veg"
        },
      "userID": { 
          "required": true,
          "type": "Number",
          "example": "1"
        },
      "ipAddress": { 
          "type": "string",
          "example": "veg"
        },
      "ratings": { 
          "type": "string",
          "example": "non veg"
        },
      "createdAt":  {
          "type": "Date", 
          "example": "11-12-2016"
        },
      "updatedAt":  {
          "type": "Date", 
          "example": "11-12-2016"
        } 
      }
    },

     "productReviewsResponse": {
      "properties": {
            "productID":  {
            "required": true,
            "type": "Number",
            "example": "1"
          },
        "comments": {  
            "type": "string",
            "example": "non veg"
          },
        "userID": { 
            "required": true,
            "type": "Number",
            "example": "1"
          },
        "ipAddress": { 
            "type": "string",
            "example": "veg"
          },
        "ratings": { 
            "type": "string",
            "example": "non veg"
          },
        "createdAt":  {
            "type": "Date", 
            "example": "11-12-2016"
          },
        "updatedAt":  {
            "type": "Date", 
            "example": "11-12-2016"
          } 
      }
    }, 


    "updateAutoProductRequest": {
      "properties": { 
         
      }
    },
    "updateAutoProductResponse": {
      "properties": { 
          "resilt": { 
            "type": "string",
            "example": "success"
          }
      }
    },
    
     "homePageSliderResponse": {
      "properties": {
            "sliderImg": {
          "type": "String", 
          "required": true,
          "example": "http://juskart.com/img/abc.jpg"
        },
        "name": {
          "type": "String", 
          "required": true,
          "example": "Main Slide1"
        },
        "description": {
          "type": "String", 
          "required": true,
          "example": "Main Slider"
        },
        "searchKeyword": {
          "type": "String", 
          "required": true,
          "example": "Mobiles"
        },
        "Category": {
          "type": "Number",
          "example": "1"
        },
        "Department": {
          "type": "Number", 
          "required": true,
          "example": "2"
        },
        "SubCategory": {
          "type": "Number", 
          "example": "1"
        },
         "fromDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        } 
      }
    }, 

      "createhomePageSlider": {
      "properties": { 
        "sliderImg": {
          "type": "String", 
          "required": true,
          "example": "http://juskart.com/img/abc.jpg"
        },
        "name": {
          "type": "String", 
          "required": true,
          "example": "Main Slide1"
        },
        "description": {
          "type": "String", 
          "required": true,
          "example": "Main Slider"
        },
        "searchKeyword": {
          "type": "String", 
          "required": true,
          "example": "Mobiles"
        },
        "Category": {
          "type": "Number",
          "example": "1"
        },
        "Department": {
          "type": "Number", 
          "required": true,
          "example": "2"
        },
        "SubCategory": {
          "type": "Number", 
          "example": "1"
        },
         "fromDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        }
      }
    },
    "createtodaysDeal": {
      "properties": { 
        "fromDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toTime": {
          "type": "Date",
          "required": true,
          "example": "12:20 00"
        },
        "fromTime": {
          "type": "Date",
          "required": true,
          "example": "20:40 00"
        },
        "product": {
          "type": "Number", 
          "required": true,
          "example": "1"
        }
      }
    },

    "createNavigationMenu": {
      "properties": {

        "subCategory":  {
          "type": "Number",
          "example": "1"
        },
      "img": {  
          "type": "string",
          "example": "non veg"
        },
      "isActive": {
          "required": true,
          "type": "boolean"
        },
      "parent": { 
          "type": "string",
          "example": "veg"
        },
      "title": {
          "required": true,
          "type": "string",
          "example": "non veg"
        },
      "category":  {
          "type": "Number",
          "example": "1"
        },
      "department":  {
          "type": "Number",
          "example": "1"
        },
      "level":   {
          "type": "Number",
          "example": "1"
        },
      "sequence":  {
          "type": "Number",
          "example": "1"
        } 
      }
    },

     "navigationMenuResponse": {
      "properties": {
        "subCategory":  {
          "type": "Number",
          "example": "1"
        },
      "img": {  
          "type": "string",
          "example": "non veg"
        },
      "isActive": {
          "required": true,
          "type": "boolean"
        },
      "parent": { 
          "type": "string",
          "example": "veg"
        },
      "title": {
          "required": true,
          "type": "string",
          "example": "non veg"
        },
      "category":  {
          "type": "Number",
          "example": "1"
        },
      "department":  {
          "type": "Number",
          "example": "1"
        },
      "level":   {
          "type": "Number",
          "example": "1"
        },
      "sequence":  {
          "type": "Number",
          "example": "1"
        } 
      }
    }, 

    "todaysDealResponse": {
      "properties": {
        "fromDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toDate": {
          "type": "Date",
          "required": true,
          "example": "11-12-2016"
        },
        "toTime": {
          "type": "Date",
          "required": true,
          "example": "12:20 00"
        },
        "fromTime": {
          "type": "Date",
          "required": true,
          "example": "20:40 00"
        },
        "productID": {
          "type": "Number", 
          "required": true,
          "example": "1"
        }
      }
    }, 
    "getOrderByUserId": {
      "properties": {
        "UserId": {
          "required": true,
          "type": "Number",
          "example": "123"
        }
      }
    },
    "getOrderByUserResponse": {
      "properties": {
        "name": {
          "required": true,
          "type": "String",
          "example": "non veg"
        },
        "description": {
          "required": true,
          "type": "String",
          "example": "non veg"
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    },
    "getCartItems": {
      "properties": {
        "UserID": {
          "type": "Number",
          "example": 131
        },
        "sessionID": {
          "required": true,
          "type": "String",
          "example": "aa565asdasdy87sadasd987"
        }
      }
    },

    "UpdateUserToCart": {
      "properties": {
        "UserID": {
          "required": true,
          "type": "Number",
          "example": 131
        },
        "sessionID": {
          "required": true,
          "type": "String",
          "example": "aa565asdasdy87sadasd987"
        }
      }
    },

    "EmptyCart": {
      "properties": {
        "UserID": {
          "type": "Number",
          "example": 131
        },
        "sessionID": {
          "required": true,
          "type": "String",
          "example": "aa565asdasdy87sadasd987"
        },
        "isDeleted": {
          "required": true,
          "type": "boolean",
          "example": false
        }
      }
    },

    "changeUserPassword": {
      "properties": {
        "oldPassword": {
          "required": true,
          "type": "string",
          "example": "test@123"
        },
        "newPassword": {
          "type": "string",
          "required": true, 
          "example": "test@1234"
        } 
      }
    },

    "createUser": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "user1"
        },
        "email": {
          "type": "string",
          "required": true,
          "unique": true,
          "example": "user123@gmail.com"
        },
        "password": {
          "required": true,
          "type": "string",
          "example": "Admin@123"
        }
      }
    },
    "Userresponse": {
      "properties": {
        "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEzMSwiaWF0IjoxNDc5Mzk1NzQ1LCJleHAiOjE0Nzk0MTM3NDV9.qk7ru4Y2Q1qj1GcjykOEE2Ik81YG8susBYPDDJXGk-U"
      }
    },
    "Login": {
      "properties": {
        "email": {
          "type": "string",
          "example": "user123@gmail.com"
        },
        "password": {
          "required": true,
          "type": "string",
          "example": "Admin@123"
        }
      }
    },
    "loginresponse": {
      "properties": {
        "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjEzMSwiaWF0IjoxNDc5Mzk1NzQ1LCJleHAiOjE0Nzk0MTM3NDV9.qk7ru4Y2Q1qj1GcjykOEE2Ik81YG8susBYPDDJXGk-U"
      }
    },
    "UpdateCart": {
      "properties": {
        "quantity": {
          "type": "Number",
          "example": 2
        },
        "UserID": {
          "type": "Number",
          "example": 123
        }
      }
    },
    "UpdateCartresponse": {
      "properties": {
        "_id": {
          "type": "number",
          "example": 1
        },
        "product": {
          "type": "number",
          "example": 1
        },
        "ipAddress": {
          "type": "string",
          "example": "192.19.10.1"
        },
        "area": {
          "type": "string",
          "example": "DUbai"
        },
        "pinCode": {
          "type": "number",
          "example": 560102
        },
        "quantity": {
          "type": "number",
          "example": 2
        },
        "sessionID": {
          "type": "string",
          "example": "aa565asdasdy87sadasd987"
        },
        "authToken": {
          "type": "string",
          "example": "aa565asdasdy87sadasd987asdasdasdasd"
        },
        "updatedDate": {
          "type": "date",
          "example": "2016-11-17T18:19:31.781Z"
        },
        "isDeleted": {
          "type": "number",
          "example": false
        },
        "UserID": {
          "type": "number",
          "example": 131
        }
      }
    },
    "userInfoResponse": {
      "properties": {
        "_id": {
          "type": "number",
          "example": 123
        },
        "provider": {
          "type": "string",
          "example": "local"
        },
        "name": {
          "type": "string",
          "example": "user1"
        },
        "email": {
          "type": "string",
          "example": "user123@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "SJdqxCIR0ZSolWP9j04KCPBgkwOp+IXacLotuqCiNVGCXbQvNVpRljqMnaCQZ+1y+sIQ944JLJ+6dfEwm5THLA=="
        },
        "role": {
          "type": "string",
          "example": "user"
        }
      }
    },
    "createshoppingCart": {
      "properties": {
        "product": {
          "required": true,
          "type": "number",
          "example": "123"
        },
        "ipAddress": {
          "type": "string",
          "required": true,
          "example": "192.19.10.1"
        },
        "area": {
          "type": "string",
          "example": "dubai"
        },
        "pinCode": {
          "type": "number",
          "example": "560102"
        },
        "quantity": {
          "type": "number",
          "required": true,
          "example": "2"
        },
        "UserID": {
          "type": "string",
          "example": "12"
        },
        "sessionID": {
          "type": "string",
          "required": true,
          "example": "aa565asdasdy87sadasd987"
        },
        "authToken": { 
          "type": "string",
          "example": "aa565asdasdy87sadasd987asdasdasdasd"
        },
        "updatedDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "isDeleted": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "createwishList": {
      "properties": {
        "product": {
          "required": true,
          "type": "number",
          "example": "123"
        },
        "ipAddress": {
          "type": "string",
          "required": true,
          "example": "192.19.10.1"
        },
        "area": {
          "type": "string",
          "example": "dubai"
        },
        "pinCode": {
          "type": "number",
          "example": "560102"
        },
        "quantity": {
          "type": "number",
          "required": true,
          "example": "2"
        },
        "UserID": {
          "type": "string",
          "example": "12"
        },
        "sessionID": {
          "type": "string",
          "required": true,
          "example": "aa565asdasdy87sadasd987"
        },
        "authToken": { 
          "type": "string",
          "example": "aa565asdasdy87sadasd987asdasdasdasd"
        },
        "updatedDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "isDeleted": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "createaddress": {
      "properties": {
        "name": {
          "type": "string",
          "example": "Anil S G",
          "required": true
        },
        "userID": {
          "type": "number",
          "example": "0",
          "required": true
        },
        "addressType": {
          "type": "string",
          "example": "non veg"
        },
        "authToken": {
          "type": "string",
          "example": ""
        },
        "street1": {
          "type": "string",
          "example": "1st Cross",
          "required": true
        },
        "street2": {
          "type": "string",
          "example": "2nd main"
        },
        "street3": {
          "type": "string",
          "example": "3rd lane"
        },
        "street4": {
          "type": "string",
          "example": "Near to shop"
        },
        "companyName": {
          "type": "string",
          "example": ""
        },
        "officeNumber": { 
          "type": "number",
          "example": "1234567890"
        },
        "mobileNumber": { 
          "type": "number",
          "example": "1234567890"
        },
        "landLineNumber": { 
          "type": "number",
          "example": "1234567890"
        },
        "pinCode": { 
          "type": "number",
          "example": "1234567890"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "Menia"
        },
        "state": {
          "required": true,
          "type": "string",
          "example": "minnesota"
        },
        "country": {
          "required": true,
          "type": "string",
          "example": "US"
        } 
      }
    },
    "cartresponse": {
      "properties": {
        "product": {
          "required": true,
          "type": "number",
          "example": "123"
        },
        "ipAddress": {
          "type": "string",
          "required": true,
          "example": "192.19.10.1"
        },
        "area": {
          "type": "string",
          "example": "Bangalore"
        },
        "pinCode": {
          "type": "number",
          "example": "560102"
        },
        "quantity": {
          "type": "number",
          "required": true,
          "example": "2"
        },
        "UserID": {
          "type": "string",
          "example": "12"
        },
        "sessionID": {
          "type": "string",
          "required": true,
          "example": "aa565asdasdy87sadasd987"
        },
        "authToken": { 
          "type": "string",
          "example": "aa565asdasdy87sadasd987asdasdasdasd"
        },
        "updatedDate": {
          "type": "date",
          "example": "12-11-2016"
        },
        "isDeleted": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "createProduct": {
      "properties": {
        "name": {
            "required": true,
          "type": "string",
          "example": "chicken"
        },
        "description": {
            "required": true,
          "type": "string",
          "example": "Mexican Grilled Chicken "
        },
        "dept": {
            "required": true,
          "type": "string",
          "example": "non veg"
        },
        "cat": {
            "required": true,
          "type": "string",
          "example": "non veg"
        },
        "subCat": {
            "required": true,
          "type": "string",
          "example": "chicken"
        },
        "sku": {
            "required": true,
          "type": "string",
          "example": "abcd12345"
        },
        "brand": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },

        "s1": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },

        "s2": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },

        "s3": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },
        "p1": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },

        "p2": {
          "required": true,
          "type": "string",
          "example": "abcd"
        },
        "mainImageUrl": {
          "required": true,
          "type": "string",
          "example": "abcd.jpg"
        },
        "vendorID": {
          "required": true,
          "type": "Number",
          "example": 100
        },
        "quantity": {
          "required": true,
          "type": "Number",
          "example": 10
        },
        "listPrice": {
          "required": true,
          "type": "Number",
          "example": 500
        },
        "salePrice": {
          "required": true,
          "type": "Number",
          "example": 300
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    },


"createHomePageSections": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "Product_Name"
        },
        "fromDate": {
          "required": true,
          "type": "Date",
          "example": "06-30-2017"
        },
        "toDate": {
          "required": true,
          "type": "Date",
          "example": "09-02-2017"
        },
        "description": {
          "type": "String",
          "example": "Featured Products section"
        },
        "title": {
            "type": "String",
          "example": "Featured Products"
        },
        "isAdvt": {
          "required": true,
          "type": "Boolean",
          "example": "true"
        },
        "level": {
          "required": true,
            "type": "Number",
          "example": "1"
        },
        "isActive": {
          "type": "Boolean",
          "example": "true"
        }
      }
    },

"createHomePageSectionItems": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "Product_Name"
        },
        "searchUrl": {
          "type": "string",
          "example": "name"
        },
        "imgUrl": {
          "type": "string",
          "example": "http://juskart.com/asd.jpg"
        },
        "product": {
          "type": "Number",
          "example": "1"
        },
        "section": {
            "type": "Number",
          "example": "1"
        },
        "isActive": {
          "type": "Boolean",
          "example": "true"
        }
      }
    },
"createProductsPropertiesResponse": {
      "properties": {
        "fieldName": {
          "required": true,
          "type": "string",
          "example": "Product_Name"
        },
        "ProductMappingfield": {
          "required": true,
          "type": "string",
          "example": "name"
        },
        "dataType": {
          "type": "string",
          "required": true,
          "example": "string"
        },
        "isImage": {
          "type": "boolean",
          "example": "false"
        },
        "specialConditionValue": {
          "type": "string",
          "example": "~,`,!,@,#,$,%,:,^,*,=,\/,\"\\"
        },
        "isRequired": {
          "type": "boolean",
          "required": true,
          "example": "true"
        },
        "subCategory": {
          "type": "string",
          "example": "Common"
        }
      }
    },
   
   "productsPropertiesResponse": {
      "properties": {
        "fieldName": {
          "required": true,
          "type": "string",
          "example": "Product_Name"
        },
        "ProductMappingfield": {
          "required": true,
          "type": "string",
          "example": "name"
        },
        "dataType": {
          "type": "string",
          "required": true,
          "example": "string"
        },
        "isImage": {
          "type": "boolean",
          "example": "false"
        },
        "specialConditionValue": {
          "type": "string",
          "example": "~,`,!,@,#,$,%,:,^,*,=,\/,\"\\"
        },
        "isRequired": {
          "type": "boolean",
          "required": true,
          "example": "true"
        },
        "subCategory": {
          "type": "string",
          "example": "Common"
        }
      }
    },

    "forgotPasswordresponse": {
      "properties": {
        "email": {
          "required": true,
          "type": "string",
          "example": "user123@gmail.com"
        }
      }
    },


    "forgotPassword": {
      "properties": {
        "email": {
          "required": true,
          "type": "string",
          "example": "user123@gmail.com"
        }
      }
    },

    "response1": {
      "properties": {
        "Id": {
          "required": true,
          "type": "Number",
          "example": "123"
        }
      }
    },

    "autoCompleteResponse": {
      "properties": { 
          "Id": {
          "required": true,
          "type": "Number",
          "example": "12"
        } 
      }
    },

    "searchresponse": {
      "properties": {
        "searchTerm": {
          "required": true,
          "type": "String",
          "example": "meals"
        }
      }
    },
    "response": {
      "properties": {
        "Id": {
          "required": true,
          "type": "Number",
          "example": "12"
        }
      }
    },
    "delete": {
      "properties": {
        "Id": {
          "required": true,
          "type": "Number",
          "example": "12"
        },
        "status": {
          "required": true,
          "type": "string",
          "example": "deleted"
        }
      }
    },
    "400error": {
      "properties": {
        "message": {
          "type": "string",
          "example": "400 Bad Request"
        }
      }
    }
  }
}